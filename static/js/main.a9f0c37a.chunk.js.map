{"version":3,"sources":["firebase.js","assets/blond.png","assets/green-and-black.png","assets/mustache.png","assets/summer-hat.png","assets/dino-head.png","assets/black-hair.png","helpers/getIconImages.js","assets/spinner.svg","components/loadingSpinner.js","components/UserSettingsForm.js","helpers/getUserIconImg.js","helpers/getMessageClr.js","components/styledComponents/MessageStyles.js","components/chatRoom/ChatMessages.js","components/chatRoom/SendImageMsg.js","components/chatRoom/NewMessageForm.js","components/styledComponents/GeneralStyles.js","components/chatRoom/User.js","helpers/objectsAreEqual.js","helpers/getUsersLastVisit.js","components/chatRoom/OnlineUsersList.js","components/chatRoom/Sidebar.js","components/chatRoom/ChatRoom.js","components/SignIn.js","components/App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","getUserIcons","name","img","blond","black_hair","dino_head","summer_hat","glasses_and_mustache","green_and_black_hair","LoadingSpinner","width","height","style","margin","gridArea","src","spinner","alt","IconRadioBtn","icon","setUserIcon","userIcon","htmlFor","type","id","checked","value","onChange","e","target","ColorRadioBtn","clr","setUserColor","userColor","className","getFirstName","fullName","split","UserSettingsForm","updatingSettings","userSettingsSet","userData","setUserData","userSettingsOpen","loadingSpinnerOn","moveToChatRoom","currentUser","uid","displayName","iconArr","useState","userName","setUserName","loadingComplete","setLoadingComplete","submitSettings","preventDefault","formValues","chatName","undefined","chatIcon","themeColor","collection","doc","update","then","prev","prevData","createdAt","lastSeen","newSettingsObj","where","get","querySnapshot","forEach","ref","senderName","senderIcon","color","r","console","log","catch","changeSettingsForOlderMessages","error","updateUserSettings","userDocument","FieldValue","serverTimestamp","set","firstTimeSubmittingSettings","useEffect","onClick","marginTop","onSubmit","map","getUserIconImg","imgName","iconImg","icons","i","length","getMessageClr","Message","styled","div","props","msgClass","MessageContainer","SenderInfo","p","SentTime","ChatMessage","message","text","imageUrl","messageClass","messageSentTime","timestamp","currentDate","Date","wholeDate","seconds","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","getMsgCreatedTime","info","ChatMessages","changingMessageSettings","scrollDownRef","useRef","messages","setMessages","loading","setLoading","orderBy","limit","onSnapshot","snapshot","docs","data","current","scrollIntoView","behavior","msg","index","uniqid","padding","SendImageMsg","action","file","files","document","getElementById","reset","match","photoURL","add","messageRef","filePath","storage","put","fileSnapshot","getDownloadURL","url","storageUri","metadata","fullPath","saveImageMessage","onMediaFileSelected","accept","capture","NewMessageForm","formValue","setFormValue","sendMessage","placeholder","Main","main","SignInSection","UserColor","User","user","objectsAreEqual","other","Object","prototype","toString","call","indexOf","valueLen","keys","compare","item1","item2","itemType","key","hasOwnProperty","getUsersLastVisit","Number","nanoseconds","checkIfUserIsOnline","currentTimestamp","OnlineUsersList","usersData","setUsersData","onlineUsers","setOnlineUsers","setCurrentUser","timer","setTimer","onlineUsersFromDB","allUsersData","push","getAllOnlineUsers","interval","setInterval","clearInterval","exists","addNewUserDocument","Sidebar","logOff","setUserSettingsOpen","biggerScreen","window","innerWidth","sidebarOpen","setSidebarOpen","sidebarWidth","querySelector","gridTemplateColumns","toggleSidebar","ChatRoom","signInWithGoogle","provider","GoogleAuthProvider","test","navigator","userAgent","isMobileDevice","signInWithPopup","signInWithRedirect","SignIn","App","currentUserData","setCurrentUserData","setUserSettingsSet","firstLogin","setFirstLogin","useAuthState","returnToDefaultStates","signOut","ChatRoomOrSettings","getUserData","fourDaysAgo","Timestamp","now","element","delete","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a9f0c37a.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDaHvjWQBPbi_8qb-53ZZYw6YlMmog89Ig\",\r\n    authDomain: \"superchat-be9ab.firebaseapp.com\",\r\n    projectId: \"superchat-be9ab\",\r\n    storageBucket: \"superchat-be9ab.appspot.com\",\r\n    messagingSenderId: \"547015847672\",\r\n    appId: \"1:547015847672:web:427a9f137fe980ba27d50d\"\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\n\r\nexport { db, auth };","export default __webpack_public_path__ + \"static/media/blond.9071513f.png\";","export default __webpack_public_path__ + \"static/media/green-and-black.d9d39ac6.png\";","export default __webpack_public_path__ + \"static/media/mustache.6c401d7b.png\";","export default __webpack_public_path__ + \"static/media/summer-hat.c46117c4.png\";","export default __webpack_public_path__ + \"static/media/dino-head.35afc71d.png\";","export default __webpack_public_path__ + \"static/media/black-hair.68bdd4da.png\";","import blond from \"../assets/blond.png\"\r\nimport green_and_black_hair from \"../assets/green-and-black.png\"\r\nimport glasses_and_mustache from \"../assets/mustache.png\"\r\nimport summer_hat from \"../assets/summer-hat.png\"\r\nimport dino_head from \"../assets/dino-head.png\"\r\nimport black_hair from \"../assets/black-hair.png\"\r\n\r\n\r\nexport default function getUserIcons() {\r\n    return [\r\n        {\r\n            name: 'blonde-hair',\r\n            img: blond,\r\n            // https://image.flaticon.com/icons/png/512/2945/2945423.png\r\n        },\r\n        {\r\n            name: 'black-hair',\r\n            img: black_hair,\r\n            //img: \"https://image.flaticon.com/icons/png/512/2945/2945462.png\"\r\n        },\r\n        {\r\n            name: 'dino-head',\r\n            img: dino_head,\r\n            //img: \"https://image.flaticon.com/icons/png/512/2945/2945324.png\"\r\n        },\r\n        {\r\n            name: 'summer_hat',\r\n            img: summer_hat,\r\n            //img: \"https://image.flaticon.com/icons/png/512/2945/2945430.png\"\r\n        },\r\n        {\r\n            name: 'glasses-and-mustache',\r\n            img: glasses_and_mustache,\r\n            //img: \"https://image.flaticon.com/icons/png/512/2945/2945483.png\"\r\n        },\r\n        {\r\n            name: 'green-and-black-hair',\r\n            img: green_and_black_hair,\r\n            //img: \"https://image.flaticon.com/icons/png/512/2945/2945341.png\"\r\n        }\r\n    ];\r\n}","export default __webpack_public_path__ + \"static/media/spinner.97b6fbc7.svg\";","import spinner from \"../assets/spinner.svg\";\r\nimport React from \"react\";\r\n\r\nfunction LoadingSpinner() {\r\n    return <img width={ 90 } height={ 90 } style={ {margin: \"2em auto\", gridArea: \"1/2/2/2\"} } src={ spinner }\r\n                alt=\"loading\"/>\r\n}\r\n\r\nexport default LoadingSpinner;","import React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nimport getUserIcons from \"../helpers/getIconImages\";\r\nimport LoadingSpinner from \"./loadingSpinner\";\r\n\r\nfunction UserSettingsForm({\r\n                              updatingSettings, // is user updating settings or setting them first time\r\n                              userSettingsSet, // user settings has been set\r\n                              userData,\r\n                              setUserData, // set current user data\r\n                              userSettingsOpen, // is settings pop uo open or closed\r\n                              loadingSpinnerOn, // adds loading spinner to screen when user is updating settings\r\n                              moveToChatRoom,\r\n                          }) {\r\n\r\n    const {uid, displayName} = auth.currentUser;\r\n    const iconArr = getUserIcons();\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [userColor, setUserColor] = useState('');\r\n    const [userIcon, setUserIcon] = useState('');\r\n    const [loadingComplete, setLoadingComplete] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        // Run this when page first renders\r\n        if ( updatingSettings ) {\r\n            setUserName(()=>userData.chatName);\r\n            setUserColor(()=>userData.themeColor);\r\n            setUserIcon(()=>userData.chatIcon);\r\n        } else {\r\n            setUserName(()=>getFirstName(displayName))\r\n        }\r\n        setLoadingComplete(true);\r\n    }, [])\r\n\r\n    function submitSettings(e) {\r\n        e.preventDefault();\r\n        const formValues = {\r\n            chatName: userName === undefined || userName === '' ? getFirstName(displayName) : userName,\r\n            chatIcon: userIcon,\r\n            themeColor: userColor === undefined || userColor === '' ? 'pink' : userColor,\r\n        }\r\n\r\n        if ( updatingSettings ) {\r\n            loadingSpinnerOn(true);\r\n            updateUserSettings(formValues, loadingSpinnerOn);\r\n        } else {\r\n            firstTimeSubmittingSettings(formValues, moveToChatRoom);\r\n        }\r\n    }\r\n\r\n    function updateUserSettings(formValues, loadingSpinnerOn) {\r\n        db.collection(\"users\").doc(uid).update(formValues)\r\n            .then(()=>{\r\n                userSettingsOpen(()=>false);\r\n                setUserData((prev)=>{\r\n                    // data that does not need to be updated\r\n                    const prevData = {\r\n                        createdAt: prev.createdAt,\r\n                        lastSeen: prev.lastSeen,\r\n                        fullName: prev.fullName\r\n                    }\r\n                    return {...prevData, ...formValues};\r\n                })\r\n                changeSettingsForOlderMessages(formValues, loadingSpinnerOn);\r\n            })\r\n            .catch((error)=>console.error(\"Error when updating user settings document: \", error));\r\n    }\r\n\r\n    // Gets all of the messages from database from current user and updates\r\n    function changeSettingsForOlderMessages(newSettingsObj, loadingSpinnerOn) {\r\n        firebase.firestore().collection(\"messages\")\r\n            .where(\"uid\", \"==\", uid)\r\n            .get()\r\n            .then((querySnapshot)=>{\r\n                querySnapshot.forEach((doc)=>{\r\n                    doc.ref.update({\r\n                        senderName: newSettingsObj.chatName,\r\n                        senderIcon: newSettingsObj.chatIcon,\r\n                        color: newSettingsObj.themeColor\r\n                    })\r\n                        .then(r=>console.log('message successfully updated'))\r\n                        .catch(e=>console.log('error happened while trying to update message:', e))\r\n                });\r\n                loadingSpinnerOn(false);\r\n            });\r\n    }\r\n\r\n    function firstTimeSubmittingSettings(formValues, moveToChatRoom) {\r\n        userSettingsSet(true);\r\n\r\n        const userDocument = {\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\r\n            fullName: displayName,\r\n            uid,\r\n            chatName: formValues.chatName,\r\n            chatIcon: formValues.chatIcon,\r\n            themeColor: formValues.themeColor,\r\n        };\r\n        // First set changed to firebase\r\n        db.collection(\"users\").doc(uid).set(userDocument)\r\n            .then(()=>{\r\n                setUserData(()=>userDocument); // set user data to user document, so it can be accessed later\r\n                moveToChatRoom(true);\r\n                console.log(\"Document successfully added to collection!\")\r\n            })\r\n            .catch((error)=>console.error(\"Error when adding user settings document: \", error));\r\n    }\r\n\r\n    if ( loadingComplete ) {\r\n        return (\r\n            <div className=\"pop-up\">\r\n                { updatingSettings ? <div className=\"close_cont\"><i className=\"fas fa-times close-settings\"\r\n                                                                    onClick={ ()=>userSettingsOpen(()=>false) }/>\r\n                </div> : <></> }\r\n                <h2 style={ {marginTop: updatingSettings ? 'initial' : '1em'} }>{ updatingSettings ? 'Update' : 'Choose your user' } settings</h2>\r\n                <form onSubmit={ (e)=>submitSettings(e) }>\r\n                    <div className=\"settings__cont\">\r\n                        <p>User name</p>\r\n                        <input className=\"settings__name\" type=\"text\" value={ userName }\r\n                               onChange={ (e)=>setUserName(e.target.value) }/>\r\n                    </div>\r\n                    <div className=\"settings__cont\">\r\n                        <p>Theme color</p>\r\n                        <div className=\"flex\">\r\n                            <ColorRadioBtn clr=\"yellow\" userColor={ userColor } setUserColor={ setUserColor }/>\r\n                            <ColorRadioBtn clr=\"blue\" userColor={ userColor } setUserColor={ setUserColor }/>\r\n                            <ColorRadioBtn clr=\"purple\" userColor={ userColor } setUserColor={ setUserColor }/>\r\n                            <ColorRadioBtn clr=\"pink\" userColor={ userColor } setUserColor={ setUserColor }/>\r\n                            <ColorRadioBtn clr=\"green\" userColor={ userColor } setUserColor={ setUserColor }/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"settings__cont settings__icons\">\r\n                        <p>Chat icon</p>\r\n                        <div className=\"flex\">\r\n                            { iconArr.map((icon)=>{\r\n                                return <IconRadioBtn icon={ icon } userIcon={ userIcon } setUserIcon={ setUserIcon }/>\r\n                            }) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn__settings\" type=\"submit\">Save</button>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <LoadingSpinner/>\r\n        )\r\n    }\r\n}\r\n\r\nfunction IconRadioBtn({icon, setUserIcon, userIcon}) {\r\n\r\n    return (\r\n        <label htmlFor={ icon.name }>\r\n            <input type=\"radio\" id={ icon.name } checked={ userIcon === icon.name } value={ icon.name }\r\n                   onChange={ (e)=>setUserIcon(e.target.value) }/>\r\n            <img width=\"50\" height=\"50\" src={ icon.img } alt={ `${ icon.name } user icon` }/>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction ColorRadioBtn({clr, setUserColor, userColor}) {\r\n\r\n    return (\r\n        <label htmlFor={ `${ clr }-color` } className=\"clr-container\">\r\n            <input type=\"radio\" name=\"radio\" id={ `${ clr }-color` } checked={ userColor === clr } value={ clr }\r\n                   onChange={ (e)=>setUserColor(e.target.value) }/>\r\n            <span id={ clr } className=\"checkmark\"/>\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\nfunction getFirstName(fullName) {\r\n    const nameArr = fullName.split(' ');\r\n    return nameArr[0];\r\n}\r\n\r\n\r\nexport default UserSettingsForm;","import getUserIcons from \"./getIconImages\";\r\nimport black_hair from \"../assets/black-hair.png\" // default value\r\n\r\nexport default function getUserIconImg(imgName) {\r\n    const icons = getUserIcons();\r\n    let iconImg;\r\n    for (let i = 0; i < icons.length; i++) {\r\n        let icon = icons[i];\r\n        if ( icon.name === imgName ) {\r\n            iconImg = icon.img\r\n        }\r\n    }\r\n    return iconImg ? iconImg : black_hair;\r\n}\r\n\r\n","function getMessageClr(clr) {\r\n    switch (clr) {\r\n        case('yellow'):\r\n            return '#FFC68A';\r\n        case ('green'):\r\n            return '#4acfac';\r\n        case('pink'):\r\n            return '#ffa2bb';\r\n        case ('purple'):\r\n            return '#7e8ce0';\r\n        case('blue'):\r\n            return '#36c7d0';\r\n    }\r\n}\r\n\r\nexport default getMessageClr;","import styled from \"styled-components\";\r\nimport getMessageClr from \"../../helpers/getMessageClr\";\r\n\r\nconst Message = styled.div`\r\n  width: fit-content;\r\n  max-width: 90%;\r\n  padding: 0.5em 0.7em;\r\n  color: #212121;\r\n  border-radius: ${ props=>props.msgClass === \"msg__sent\" ? \"25px 25px 2px 25px\" : \"25px 25px 25px 2px\" };\r\n  background-color: ${ props=>getMessageClr(props.color) };\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: ${ props=>props.msgClass === \"msg__sent\" ? \"row-reverse\" : \"row\" };\r\n`;\r\n\r\nconst SenderInfo = styled.p`\r\n  font-size: 0.6rem;\r\n  font-style: italic;\r\n  margin-left: ${ props=>props.msgClass === \"msg__sent\" ? \"auto\" : \"3em\" };\r\n  margin-right: ${ props=>props.msgClass === \"msg__sent\" ? \"3em\" : \"initial\" };\r\n  text-align: ${ props=>props.msgClass === \"msg__sent\" ? \"right\" : \"left\" };\r\n  @media (min-width: 700px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst SentTime = styled(SenderInfo)`\r\n  font-size: 0.5rem;\r\n  color: black;\r\n  letter-spacing: 1px;\r\n  margin-left: ${ props=>props.msgClass === \"msg__sent\" ? \"auto\" : \"0\" };\r\n  margin-right: ${ props=>props.msgClass === \"msg__sent\" ? \"0\" : \"initial\" };\r\n  @media (min-width: 700px) {\r\n    font-size: 0.6rem;\r\n  }\r\n`;\r\n\r\nexport {\r\n    Message,\r\n    MessageContainer,\r\n    SenderInfo,\r\n    SentTime,\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { auth, db } from \"../../firebase\";\r\n\r\nimport uniqid from \"uniqid\";\r\nimport getUserIconImg from \"../../helpers/getUserIconImg\";\r\n\r\nimport spinner from \"../../assets/spinner.svg\";\r\nimport { Message, MessageContainer, SenderInfo, SentTime } from \"../styledComponents/MessageStyles\";\r\n\r\n\r\nfunction ChatMessages({changingMessageSettings}) {\r\n    const scrollDownRef = useRef();\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        db.collection('messages').orderBy('createdAt').limit(100)\r\n            .onSnapshot((snapshot)=>{\r\n                setMessages(snapshot.docs.map(doc=>doc.data()));\r\n                setLoading(false);\r\n            })\r\n    }, [])\r\n\r\n    // Scrolls when page first loads\r\n    useEffect(()=>{\r\n        if ( !loading ) {\r\n            scrollDownRef.current.scrollIntoView({behavior: \"smooth\"});\r\n        }\r\n    }, [loading])\r\n\r\n    // Scrolls after new message arrives\r\n    useEffect(()=>{\r\n        if ( !loading ) {\r\n            scrollDownRef.current.scrollIntoView({behavior: 'smooth'});\r\n        }\r\n    }, [messages])\r\n\r\n    // When user is changing their settings and press submit, set loading to true and after updating user settings\r\n    // to message documents are done change loading to false. So loading spinner is shown on the screen.\r\n    useEffect(()=>{\r\n        setLoading(!loading)\r\n    }, [changingMessageSettings])\r\n\r\n\r\n    if ( loading ) {\r\n        return (\r\n            <section className=\"messages__container\">\r\n                <img width={ 90 } height={ 90 } style={ {margin: \"2em auto\"} } src={ spinner } alt=\"loading\"/>\r\n            </section>\r\n        )\r\n    } else {\r\n        return (\r\n            <section className=\"messages__container\">\r\n                { messages.map((msg, index)=>{\r\n                    return <ChatMessage key={ uniqid() } message={ msg }/>\r\n                }) }\r\n                <div ref={ scrollDownRef } style={ {padding: '0.5em'} }/>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ChatMessage({message}) {\r\n    const {text, uid, imageUrl, senderName, senderIcon, color, createdAt} = message;\r\n    // Give different styling depending if msg is sent by current user or received\r\n    const messageClass = uid === auth.currentUser.uid ? 'msg__sent' : 'msg__received';\r\n    const messageSentTime = getMsgCreatedTime(createdAt);\r\n\r\n    if ( createdAt ) {\r\n        return (\r\n            <div className=\"message\">\r\n                <SenderInfo info={ \"name\" }\r\n                            msgClass={ messageClass }>{ messageClass === 'msg__sent' ? 'You' : senderName }</SenderInfo>\r\n                <MessageContainer msgClass={ messageClass }>\r\n                    <img width={ 25 } height={ 25 } src={ getUserIconImg(senderIcon) }\r\n                         alt={ `${ senderIcon } user icon` }/>\r\n                    <Message msgClass={ messageClass } color={ color }>\r\n                        { imageUrl ? <img className=\"msg__img\" src={ imageUrl } alt=\"image message\"/> :\r\n                            < p> { text }</p> }\r\n                        <SentTime msgClass={ messageClass }>{ messageSentTime }</SentTime>\r\n                    </Message>\r\n                </MessageContainer>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nfunction getMsgCreatedTime(timestamp) {\r\n    const currentDate = new Date();\r\n    if ( timestamp ) {\r\n        const wholeDate = new Date(timestamp.seconds * 1000);\r\n        const year = wholeDate.getFullYear();\r\n        const month = wholeDate.getMonth();\r\n        const day = wholeDate.getDate();\r\n        const hour = wholeDate.getHours();\r\n        let minutes = wholeDate.getMinutes();\r\n\r\n        // If the message is send in the same day as today, return only time, else return date\r\n        if ( currentDate.getMonth() === month && currentDate.getDate() === day ) {\r\n            if ( minutes < 10 ) {\r\n                minutes = '0' + minutes\r\n            }\r\n            return `${ hour }:${ minutes }`\r\n        }\r\n        return `${ day }/${ month + 1 }/${ year }`\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ChatMessages;","import React from 'react';\r\nimport { auth, db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nimport spinner from \"../../assets/spinner.svg\";\r\n\r\n\r\nfunction SendImageMsg({currentUser}) {\r\n    return (\r\n        <form id=\"image-form\" className=\"img-form\" action=\"#\">\r\n            <label htmlFor=\"mediaCapture\" className=\"add-image__label\">\r\n                <i className=\"fas fa-camera add-image__icon\"/>\r\n            </label>\r\n            <input onChange={ (e)=>onMediaFileSelected(e, currentUser) } id=\"mediaCapture\" type=\"file\" accept=\"image/*\"\r\n                   capture=\"camera\" className=\"custom-file-input\"/>\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction onMediaFileSelected(e, currentUser) {\r\n    e.preventDefault();\r\n    const file = e.target.files[0];\r\n    // Clear the selection in the file picker input.\r\n    document.getElementById('image-form').reset();\r\n\r\n    // Check if the file is an image.\r\n    if ( !file.type.match('image.*') ) {\r\n        const data = {\r\n            message: 'You can only share images',\r\n            timeout: 2000\r\n        };\r\n        return;\r\n    }\r\n    saveImageMessage(file, currentUser);\r\n}\r\n\r\n// Saves a new message containing an image in Firebase.\r\n// This first saves the image in Firebase storage.\r\nfunction saveImageMessage(file, currentUser) {\r\n    const {uid, photoURL} = auth.currentUser;\r\n    const messagesRef = db.collection('messages');\r\n\r\n    // 1 - We add a message with a loading icon that will get updated with the shared image.\r\n    messagesRef.add({\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        photoURL,\r\n        color: currentUser.themeColor,\r\n        senderName: currentUser.chatName,\r\n        senderIcon: currentUser.chatIcon,\r\n        imageUrl: spinner,\r\n\r\n    }).then((messageRef)=>{\r\n        // 2 - Upload the image to Cloud Storage.\r\n        const filePath = firebase.auth().currentUser.uid + '/' + messageRef.id + '/' + file.name;\r\n        return firebase.storage().ref(filePath).put(file).then((fileSnapshot)=>{\r\n            // 3 - Generate a public URL for the file.\r\n            return fileSnapshot.ref.getDownloadURL().then((url)=>{\r\n                // 4 - Update the chat message placeholder with the image's URL.\r\n                return messageRef.update({\r\n                    imageUrl: url,\r\n                    storageUri: fileSnapshot.metadata.fullPath\r\n                });\r\n            });\r\n        });\r\n    }).catch((error)=>console.error('There was an error uploading a file to Cloud Storage:', error));\r\n}\r\n\r\n\r\nexport default SendImageMsg;","import React, { useState } from \"react\";\r\nimport { auth, db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport SendImageMsg from \"./SendImageMsg\";\r\n\r\nfunction NewMessageForm({currentUser}) {\r\n    const [formValue, setFormValue] = useState('');\r\n\r\n    // writes new document to firestore\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const {uid, photoURL} = auth.currentUser;\r\n\r\n        // create new document with these values\r\n        db.collection('messages').add({\r\n            senderName: currentUser.chatName,\r\n            senderIcon: currentUser.chatIcon,\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL,\r\n            color: currentUser.themeColor,\r\n        }).then(r=>{\r\n            console.log('New message successfully added to database')\r\n        }).catch(error=>console.log('error happened when adding new message:', error))\r\n        setFormValue('');\r\n    }\r\n\r\n    return (\r\n        <section className=\"form-flex\">\r\n            <SendImageMsg currentUser={ currentUser }/>\r\n            <form className=\"msg-form\" onSubmit={ (e)=>sendMessage(e) }>\r\n                <input type=\"text\" placeholder=\"Send message...\" value={ formValue }\r\n                       onChange={ (e)=>setFormValue(e.target.value) }/>\r\n                <button type=\"submit\"><i className=\"fas fa-share add-msg__icon\"/></button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default NewMessageForm;","import styled from \"styled-components\";\r\nimport getMessageClr from \"../../helpers/getMessageClr\";\r\n\r\nconst Main = styled.main`\r\n  width: 100%;\r\n  max-height: 97vh;\r\n  min-height: 95vh;\r\n  max-width: 700px;\r\n  display: grid;\r\n  grid-template-columns: 50px repeat(2, 1fr);\r\n  grid-template-rows: 60px repeat(3, 1fr) 60px;\r\n  background-color: #2d2d2d;\r\n  color: #e7e7e7;\r\n  border-radius: 20px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\r\n  transition: all 0.3s ease-in-out;\r\n  @media (min-width: 600px) {\r\n    grid-template-columns: 200px repeat(2, 1fr);\r\n    grid-template-rows: 60px repeat(3, 1fr) 80px;\r\n  }\r\n`;\r\n\r\nconst SignInSection = styled.div`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  min-height: 300px;\r\n  padding: 1em;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n\r\n  & > header h1 {\r\n    border-bottom: 2px solid #7e8ce0;\r\n  }\r\n\r\n  & > section {\r\n    width: 100%;\r\n    max-width: 400px;\r\n    margin: 2em auto;\r\n\r\n    & > p {\r\n      font-weight: bolder;\r\n      letter-spacing: 1px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst UserColor = styled.div`\r\n  padding: 0.5em;\r\n  border-radius: 50px;\r\n  background-color: ${ props=>getMessageClr(props.color) };`;\r\n\r\n\r\nexport {\r\n    Main,\r\n    SignInSection,\r\n    UserColor,\r\n}","import React from 'react';\r\nimport getUserIconImg from \"../../helpers/getUserIconImg\";\r\nimport { UserColor } from \"../styledComponents/GeneralStyles\";\r\n\r\nfunction User({user, currentUser}) {\r\n\r\n    return (\r\n        <div className=\"flex online__user\">\r\n            <UserColor color={ user.themeColor }/>\r\n            <img width={ 30 } height={ 30 } src={ getUserIconImg(user.chatIcon) } alt=\"user icon\"/>\r\n            <p>{ currentUser ? 'You' : user.chatName }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","function objectsAreEqual(value, other) {\r\n    // Get the value type\r\n    let type = Object.prototype.toString.call(value);\r\n\r\n    // If the two objects are not the same type, return false\r\n    if ( type !== Object.prototype.toString.call(other) ) return false;\r\n\r\n    // If items are not an object or array, return false\r\n    if ( ['[object Array]', '[object Object]'].indexOf(type) < 0 ) return false;\r\n\r\n    // Compare the length of the length of the two items\r\n    let valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n    let otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n    if ( valueLen !== otherLen ) return false;\r\n\r\n    // Compare two items\r\n    function compare(item1, item2) {\r\n\r\n        // Get the object type\r\n        let itemType = Object.prototype.toString.call(item1);\r\n\r\n        // If an object or array, compare recursively\r\n        if ( ['[object Array]', '[object Object]'].indexOf(itemType) >= 0 ) {\r\n            if ( !objectsAreEqual(item1, item2) ) return false;\r\n        }\r\n\r\n        // Otherwise, do a simple comparison\r\n        else {\r\n            // If the two items are not the same type, return false\r\n            if ( itemType !== Object.prototype.toString.call(item2) ) return false;\r\n\r\n            // Else if it's a function, convert to a string and compare\r\n            // Otherwise, just compare\r\n            if ( itemType === '[object Function]' ) {\r\n                if ( item1.toString() !== item2.toString() ) return false;\r\n            } else {\r\n                if ( item1 !== item2 ) return false;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // Compare properties\r\n    if ( type === '[object Array]' ) {\r\n        for (let i = 0; i < valueLen; i++) {\r\n            if ( compare(value[i], other[i]) === false ) return false;\r\n        }\r\n    } else {\r\n        for (let key in value) {\r\n            if ( value.hasOwnProperty(key) ) {\r\n                if ( compare(value[key], other[key]) === false ) return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // If nothing failed, return true\r\n    return true;\r\n}\r\n\r\nexport default objectsAreEqual;","function getUsersLastVisit(user) {\r\n    if ( user.lastSeen ) {\r\n        return Number(user.lastSeen.seconds + '.' + user.lastSeen.nanoseconds);\r\n    }\r\n}\r\n\r\nexport default getUsersLastVisit;","import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nimport spinner from \"../../assets/spinner.svg\";\r\nimport User from \"./User\";\r\nimport objectsAreEqual from \"../../helpers/objectsAreEqual\";\r\nimport uniqid from \"uniqid\";\r\n\r\nimport getUsersLastVisit from \"../../helpers/getUsersLastVisit\";\r\n\r\nfunction OnlineUsersList() {\r\n    const [usersData, setUsersData] = useState([]);\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loadingComplete, setLoadingComplete] = useState(false);\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    const {uid} = auth.currentUser;\r\n\r\n    // First get the data from users database and save it to usersData\r\n    useEffect(()=>{\r\n        db.collection('users').orderBy('createdAt').limit(100)\r\n            .onSnapshot((snapshot)=>{\r\n                setUsersData(snapshot.docs.map(doc=>doc.data()));\r\n            })\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        // This returns all users (except current user) that has been seen on the server in last minute\r\n        const onlineUsersFromDB = getAllOnlineUsers(usersData);\r\n        // compare arr from onlineUsersFromDB and current onlineUsers list if there is differences merge \r\n        // onlineUsersFromDB to current onlineUsers list otherwise do nothing\r\n        const listsAreEqual = objectsAreEqual(onlineUsersFromDB, onlineUsers);\r\n\r\n        if ( !listsAreEqual ) {\r\n            setOnlineUsers(()=>onlineUsersFromDB);\r\n        }\r\n    }, [usersData])\r\n\r\n    useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            setTimer(prev=>prev + 1)\r\n        }, 20000);\r\n        return ()=>clearInterval(interval);\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        db.collection('users').doc(uid).get()\r\n            .then((doc)=>{\r\n                if ( doc.exists ) {\r\n                    setCurrentUser(doc.data());\r\n                    setLoadingComplete(true);\r\n                } else {\r\n                    addNewUserDocument(setLoadingComplete);\r\n                }\r\n            }).catch((error)=>{\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n        return ()=>console.log('unmounting...');\r\n    }, []);\r\n\r\n    // Update user document every 20s, so other users can see if you are online or not\r\n    useEffect(()=>{\r\n        db.collection(\"users\").doc(uid).update({\r\n            lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n            .then(()=>console.log(\"Document successfully updated!\"))\r\n            .catch((error)=>console.error(\"Error updating document: \", error)); // The document probably doesn't exist.\r\n    }, [timer]);\r\n\r\n\r\n    if ( loadingComplete ) {\r\n        return (\r\n            <div className=\"users__list\">\r\n                <h2>Chat users </h2>\r\n                <User key={ uniqid() } user={ currentUser } currentUser={true}/>\r\n                { onlineUsers.map((user)=>{\r\n                    return <User key={ uniqid() } user={ user }/>;\r\n                }) }\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"users__list\">\r\n                <h2>Chat users </h2>\r\n                <img width={ 50 } height={ 50 } style={ {margin: '2em auto'} } src={ spinner } alt=\"loading spinner\"/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction checkIfUserIsOnline(user) {\r\n    const currentTimestamp = new Date() / 1000;\r\n    const userLastSeen = getUsersLastVisit(user);\r\n\r\n    // is online if they have been seen in last 3min on server\r\n    return userLastSeen >= (currentTimestamp - 60)\r\n}\r\n\r\nfunction getAllOnlineUsers(allUsersData) {\r\n    const {uid} = auth.currentUser;\r\n    let onlineUsers = [];\r\n    for (let i = 0; i < allUsersData.length; i++) { // loop all of the data from users database\r\n        const userData = allUsersData[i]; // one user from database\r\n        const userIsOnline = checkIfUserIsOnline(userData);\r\n\r\n        if ( userIsOnline ) {\r\n            if ( userData.uid !== uid ) { // if online user is NOT same as current user push it to the list\r\n                onlineUsers.push({\r\n                    themeColor: userData.themeColor,\r\n                    chatIcon: userData.chatIcon,\r\n                    chatName: userData.chatName,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return onlineUsers;\r\n}\r\n\r\nfunction addNewUserDocument(setLoadingComplete) {\r\n    const {uid, displayName} = auth.currentUser;\r\n\r\n    db.collection(\"users\").doc(uid).set({\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        name: displayName\r\n    })\r\n        .then(()=>{\r\n            setLoadingComplete(true);\r\n            console.log(\"Document successfully added to collection!\");\r\n        })\r\n        .catch((error)=>{\r\n            console.error(\"Error when adding document: \", error);\r\n        });\r\n}\r\n\r\n\r\nexport default OnlineUsersList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport OnlineUsersList from \"./OnlineUsersList\";\r\n\r\nfunction Sidebar({logOff, setUserSettingsOpen}) {\r\n    const biggerScreen = window.innerWidth >= 600; // Different styles on mobile devices and bigger screens\r\n    const [sidebarOpen, setSidebarOpen] = useState(biggerScreen);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"sidebar\">\r\n                <i className={ `fas ${ sidebarOpen ? 'fa-times' : 'fa-bars' } sidebar__toggle` }\r\n                   onClick={ ()=>toggleSidebar(sidebarOpen, setSidebarOpen) }/>\r\n\r\n                <div className={ `sidebar__content ${ sidebarOpen ? 'visible' : 'hidden' }` }>\r\n                    <OnlineUsersList/>\r\n                    <button className=\"btn btn__settings\" onClick={ ()=>setUserSettingsOpen(true) }>Settings <i\r\n                        className=\"fas fa-cog\"/></button>\r\n                    <button className=\"btn btn__sign-out\" onClick={ ()=>logOff() }>Sign out\r\n                    </button>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction toggleSidebar(sidebarOpen, setSidebarOpen) {\r\n    const sidebarWidth = !sidebarOpen ? window.innerWidth >= 600 ? 200 : 150 : 50;\r\n    document.querySelector(\"main\").style.gridTemplateColumns = `${ sidebarWidth }px repeat(2, 1fr)`;\r\n    setSidebarOpen(prev=>!prev);\r\n}\r\n\r\nexport default Sidebar;","import React, { useState } from \"react\";\r\nimport UserSettingsForm from \"../UserSettingsForm\";\r\nimport ChatMessages from \"./ChatMessages\";\r\nimport NewMessageForm from \"./NewMessageForm\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction ChatRoom({userData, logOff}) {\r\n    const [currentUser, setCurrentUser] = useState(userData);\r\n    const [userSettingsOpen, setUserSettingsOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"chat__header\">\r\n                <h2>Hello { currentUser.chatName }!</h2>\r\n                <p> Welcome to Super chat!</p>\r\n            </header>\r\n\r\n            <Sidebar setUserSettingsOpen={ setUserSettingsOpen } logOff={ logOff }/>\r\n\r\n            <ChatMessages changingMessageSettings={ loading }/>\r\n\r\n            <NewMessageForm currentUser={ currentUser }/>\r\n\r\n            { userSettingsOpen ?\r\n                <UserSettingsForm updatingSettings={ true } userData={ userData } setUserData={ setCurrentUser }\r\n                                  userSettingsOpen={ setUserSettingsOpen }\r\n                                  loadingSpinnerOn={ setLoading }/> : <></> }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ChatRoom;","import React from \"react\";\r\n\r\nimport firebase from \"firebase\";\r\nimport { auth } from \"../firebase\";\r\n\r\nimport { SignInSection } from \"./styledComponents/GeneralStyles\";\r\n\r\nfunction SignIn() {\r\n\r\n    return (\r\n        <SignInSection>\r\n            <header>\r\n                <h1>Welcome to Super Chat</h1>\r\n            </header>\r\n            <section>\r\n                <p>So that you can start chatting with other users please sign in:</p>\r\n                <div onClick={ signInWithGoogle } className=\"google-btn\">\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" alt=\"google logo\"\r\n                             src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\r\n                    </div>\r\n                    <p className=\"btn-text\"><b>Sign in with google</b></p>\r\n                </div>\r\n            </section>\r\n        </SignInSection>\r\n    )\r\n}\r\n\r\n\r\nfunction signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    if ( isMobileDevice() ) {\r\n        auth.signInWithRedirect(provider).then(()=> {\r\n            console.log('Redirecting to google authentication successful')\r\n        }).catch((error)=>{\r\n            console.log(\"Error redirecting:\", error);\r\n        });\r\n    } else {\r\n        auth.signInWithPopup(provider).then(()=> {\r\n            console.log('Opening pop-up to google authentication successful')\r\n        }).catch((error)=>{\r\n            console.log(\"Error getting pop up:\", error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction isMobileDevice() {\r\n    if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n        return true\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth, db } from '../firebase'\r\n\r\nimport ChatRoom from \"./chatRoom/ChatRoom\";\r\nimport UserSettingsForm from \"./UserSettingsForm\";\r\nimport LoadingSpinner from \"./loadingSpinner\";\r\nimport SignIn from \"./SignIn\";\r\n\r\nimport { Main } from \"./styledComponents/GeneralStyles\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction App() {\r\n    const [currentUserData, setCurrentUserData] = useState();\r\n    const [userSettingsSet, setUserSettingsSet] = useState(false);\r\n    const [loadingComplete, setLoadingComplete] = useState(false);\r\n    const [firstLogin, setFirstLogin] = useState(false);\r\n\r\n    const [user, loading] = useAuthState(auth); // true if firebase.User is logged in, false if not\r\n\r\n    useEffect(()=>{\r\n        const timestamp = firebase.firestore.Timestamp.now();\r\n        let fourDaysAgo = timestamp.seconds - (96 * 60 * 60); // timestamp for four days ago\r\n\r\n        // Deletes all messages from firestore messages database which are MORE than four days old\r\n        db.collection(\"messages\").where(\"createdAt\", \"<\", fourDaysAgo)\r\n            .get().then((querySnapshot)=>{\r\n            querySnapshot.forEach(element=>{\r\n                element.ref.delete().then(r=>console.log('element successfully deleted'));\r\n            });\r\n        })\r\n    }, [])\r\n\r\n    // When user signs out from chat, return states to they default states\r\n    function returnToDefaultStates() {\r\n        auth.signOut().then(r=>console.log('user has signed off'));\r\n        setUserSettingsSet(false);\r\n        setLoadingComplete(false);\r\n        setFirstLogin(false);\r\n    }\r\n\r\n    function ChatRoomOrSettings() {\r\n        if ( !firstLogin && !loadingComplete && !userSettingsSet ) { // default state. This should run first and only once\r\n            getUserData();\r\n            return <LoadingSpinner/>\r\n        }\r\n        // If first login, open first user settings form and then chatroom\r\n        if ( firstLogin ) {\r\n            if ( !loadingComplete && userSettingsSet ) {\r\n                return <LoadingSpinner/>\r\n            }\r\n            if ( loadingComplete && userSettingsSet ) {\r\n                return <ChatRoom logOff={ returnToDefaultStates } userData={ currentUserData }/>\r\n            }\r\n            return <UserSettingsForm updatingSettings={ false } setUserData={ setCurrentUserData }\r\n                                     userSettingsSet={ setUserSettingsSet } moveToChatRoom={ setLoadingComplete }/>\r\n        }\r\n        // if NOT first login, go straight to chat room\r\n        if ( loadingComplete && userSettingsSet ) {\r\n            return <ChatRoom logOff={ returnToDefaultStates } userData={ currentUserData }/>\r\n        } else {\r\n            return <LoadingSpinner/>\r\n        }\r\n    }\r\n\r\n    function getUserData() {\r\n        const {uid} = auth.currentUser;\r\n\r\n        db.collection(\"users\").doc(uid).get()\r\n            .then((doc)=>{\r\n                if ( doc.exists ) {\r\n                    setCurrentUserData(()=>doc.data());\r\n                    setUserSettingsSet(true);\r\n                    setLoadingComplete(true);\r\n                } else { // Users first login\r\n                    setFirstLogin(true);\r\n                }\r\n            })\r\n            .catch((error)=>console.log('Error when getting user document first time', error));\r\n    }\r\n\r\n//\r\n    return (\r\n        <Main>\r\n            { loading ? <LoadingSpinner/> : user ? <ChatRoomOrSettings/> : <SignIn/> }\r\n        </Main>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"./main.css\";\nimport App from \"./components/App\";\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}